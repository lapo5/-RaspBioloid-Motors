#!/usr/bin/env python

import sys
import rospy
from motors_srvs.srv import *

def move_motor_client(mytype):
	if(mytype == 0):
		rospy.wait_for_service('move_motor')
		try:
			move_motor = rospy.ServiceProxy('move_motor', MoveMotor)
			if(sys.argv >= 5):
				resp1 = move_motor(int(sys.argv[2]), int(sys.argv[3]), int(sys.argv[4]))
			else:
				resp1 = move_motor(13, 488, 60)
			return resp1.result
		except rospy.ServiceException, e:
			print "Service call failed: %s"%e
	if(mytype == 1):
		print "Requesting sevrice torque"
		rospy.wait_for_service('torque_motor')
		try:
			torque_motor = rospy.ServiceProxy('torque_motor', Torque)
			if(sys.argv >= 4):
				resp1 = torque_motor(int(sys.argv[2]), bool(int(sys.argv[3])))
			else:
				resp1 = torque_motor(13, True)
			return resp1.result
		except rospy.ServiceException, e:
			print "Service call failed: %s"%e
	if(mytype == 2):
		rospy.wait_for_service('torque_all')
		try:
			torque_all = rospy.ServiceProxy('torque_all', TorqueAll)
			if(sys.argv >= 3):
				resp1 = torque_all(bool(int(sys.argv[2])))
			else:
				resp1 = torque_all(True)
			return resp1.result
		except rospy.ServiceException, e:
			print "Service call failed: %s"%e



if __name__ == "__main__":
    if len(sys.argv) >= 2:
		mytype = int(sys.argv[1])
    else:
        sys.exit(1)
    print "Returned %d" % move_motor_client(mytype)
