#!/usr/bin/env python

import rospy
import sys
import dynamixel_workbench_toolbox as dw
from motors.msg import *

def motor_monitor():
	rospy.init_node('motor_monitor', anonymous=True)

	pub = []
	#superPublisher = rospy.Publisher('motors_info', MotorsStatus, queue_size=1)
	workbench = dw.ExtendedDynamixelWorkbench()
	workbench.begin("/dev/ttyACM0", 1000000)
	isOK, cont, ids = workbench.scan(18)
	for i in range(0, cont):
		pub.append(rospy.Publisher('motors_info/'+str(ids[i]), MotorMsg, queue_size=1))

	motor_msg = MotorMsg()
	#motors_status = MotorsStatus()

	rate = rospy.Rate(1000)
	while not rospy.is_shutdown():
		for i in range(1, cont+1):
			motor_msg.Pos = workbench.readPresentPosition(i)
			motor_msg.Speed = workbench.readPresentSpeed(i)
			motor_msg.Voltage = workbench.readPresentVoltage(i)
			motor_msg.Temperature = workbench.readPresentTemperature(i)

			pub[i-1].publish(motor_msg)

			#motors_status.Motors = motor_msg
			#superPublisher.publish(motors_status)
			#rospy.loginfo(motor_msg)
		rate.sleep()


	# spin() simply keeps python from exiting until this node is stopped
	rospy.spin()

if __name__ == '__main__':
	motor_monitor()
